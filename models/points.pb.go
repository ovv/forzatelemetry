// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.6
// source: points.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApiPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaceTime           float32 `protobuf:"fixed32,1,opt,name=raceTime,proto3" json:"raceTime,omitempty"`
	LapTime            float32 `protobuf:"fixed32,2,opt,name=lapTime,proto3" json:"lapTime,omitempty"`
	LapNumber          uint32  `protobuf:"varint,3,opt,name=lapNumber,proto3" json:"lapNumber,omitempty"`
	Fuel               float32 `protobuf:"fixed32,4,opt,name=fuel,proto3" json:"fuel,omitempty"`
	Speed              float32 `protobuf:"fixed32,5,opt,name=speed,proto3" json:"speed,omitempty"`
	RacePosition       uint32  `protobuf:"varint,6,opt,name=racePosition,proto3" json:"racePosition,omitempty"`
	Accel              uint32  `protobuf:"varint,7,opt,name=accel,proto3" json:"accel,omitempty"`
	Brake              uint32  `protobuf:"varint,8,opt,name=brake,proto3" json:"brake,omitempty"`
	Gear               uint32  `protobuf:"varint,9,opt,name=gear,proto3" json:"gear,omitempty"`
	TireWearFrontLeft  float32 `protobuf:"fixed32,10,opt,name=tireWearFrontLeft,proto3" json:"tireWearFrontLeft,omitempty"`
	TireWearFrontRight float32 `protobuf:"fixed32,11,opt,name=tireWearFrontRight,proto3" json:"tireWearFrontRight,omitempty"`
	TireWearRearLeft   float32 `protobuf:"fixed32,12,opt,name=tireWearRearLeft,proto3" json:"tireWearRearLeft,omitempty"`
	TireWearRearRight  float32 `protobuf:"fixed32,13,opt,name=tireWearRearRight,proto3" json:"tireWearRearRight,omitempty"`
	TireTempFrontLeft  float32 `protobuf:"fixed32,14,opt,name=tireTempFrontLeft,proto3" json:"tireTempFrontLeft,omitempty"`
	TireTempFrontRight float32 `protobuf:"fixed32,15,opt,name=tireTempFrontRight,proto3" json:"tireTempFrontRight,omitempty"`
	TireTempRearLeft   float32 `protobuf:"fixed32,16,opt,name=tireTempRearLeft,proto3" json:"tireTempRearLeft,omitempty"`
	TireTempRearRight  float32 `protobuf:"fixed32,17,opt,name=tireTempRearRight,proto3" json:"tireTempRearRight,omitempty"`
	PositionX          float32 `protobuf:"fixed32,18,opt,name=positionX,proto3" json:"positionX,omitempty"`
	PositionY          float32 `protobuf:"fixed32,19,opt,name=positionY,proto3" json:"positionY,omitempty"`
	PositionZ          float32 `protobuf:"fixed32,20,opt,name=positionZ,proto3" json:"positionZ,omitempty"`
	EngineCurrentRPM   float32 `protobuf:"fixed32,21,opt,name=engineCurrentRPM,proto3" json:"engineCurrentRPM,omitempty"`
	Steer              int32   `protobuf:"zigzag32,22,opt,name=steer,proto3" json:"steer,omitempty"`
}

func (x *ApiPoint) Reset() {
	*x = ApiPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_points_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiPoint) ProtoMessage() {}

func (x *ApiPoint) ProtoReflect() protoreflect.Message {
	mi := &file_points_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiPoint.ProtoReflect.Descriptor instead.
func (*ApiPoint) Descriptor() ([]byte, []int) {
	return file_points_proto_rawDescGZIP(), []int{0}
}

func (x *ApiPoint) GetRaceTime() float32 {
	if x != nil {
		return x.RaceTime
	}
	return 0
}

func (x *ApiPoint) GetLapTime() float32 {
	if x != nil {
		return x.LapTime
	}
	return 0
}

func (x *ApiPoint) GetLapNumber() uint32 {
	if x != nil {
		return x.LapNumber
	}
	return 0
}

func (x *ApiPoint) GetFuel() float32 {
	if x != nil {
		return x.Fuel
	}
	return 0
}

func (x *ApiPoint) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *ApiPoint) GetRacePosition() uint32 {
	if x != nil {
		return x.RacePosition
	}
	return 0
}

func (x *ApiPoint) GetAccel() uint32 {
	if x != nil {
		return x.Accel
	}
	return 0
}

func (x *ApiPoint) GetBrake() uint32 {
	if x != nil {
		return x.Brake
	}
	return 0
}

func (x *ApiPoint) GetGear() uint32 {
	if x != nil {
		return x.Gear
	}
	return 0
}

func (x *ApiPoint) GetTireWearFrontLeft() float32 {
	if x != nil {
		return x.TireWearFrontLeft
	}
	return 0
}

func (x *ApiPoint) GetTireWearFrontRight() float32 {
	if x != nil {
		return x.TireWearFrontRight
	}
	return 0
}

func (x *ApiPoint) GetTireWearRearLeft() float32 {
	if x != nil {
		return x.TireWearRearLeft
	}
	return 0
}

func (x *ApiPoint) GetTireWearRearRight() float32 {
	if x != nil {
		return x.TireWearRearRight
	}
	return 0
}

func (x *ApiPoint) GetTireTempFrontLeft() float32 {
	if x != nil {
		return x.TireTempFrontLeft
	}
	return 0
}

func (x *ApiPoint) GetTireTempFrontRight() float32 {
	if x != nil {
		return x.TireTempFrontRight
	}
	return 0
}

func (x *ApiPoint) GetTireTempRearLeft() float32 {
	if x != nil {
		return x.TireTempRearLeft
	}
	return 0
}

func (x *ApiPoint) GetTireTempRearRight() float32 {
	if x != nil {
		return x.TireTempRearRight
	}
	return 0
}

func (x *ApiPoint) GetPositionX() float32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *ApiPoint) GetPositionY() float32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *ApiPoint) GetPositionZ() float32 {
	if x != nil {
		return x.PositionZ
	}
	return 0
}

func (x *ApiPoint) GetEngineCurrentRPM() float32 {
	if x != nil {
		return x.EngineCurrentRPM
	}
	return 0
}

func (x *ApiPoint) GetSteer() int32 {
	if x != nil {
		return x.Steer
	}
	return 0
}

var File_points_proto protoreflect.FileDescriptor

var file_points_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x66, 0x6f, 0x72, 0x7a, 0x61, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0xf8,
	0x05, 0x0a, 0x08, 0x41, 0x70, 0x69, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x61, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x72,
	0x61, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6c, 0x61, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x61, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x75, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x66,
	0x75, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61, 0x63,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x72, 0x61, 0x63, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x63,
	0x63, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6b, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x65, 0x61,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x65, 0x61, 0x72, 0x12, 0x2c, 0x0a,
	0x11, 0x74, 0x69, 0x72, 0x65, 0x57, 0x65, 0x61, 0x72, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x4c, 0x65,
	0x66, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x74, 0x69, 0x72, 0x65, 0x57, 0x65,
	0x61, 0x72, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x74,
	0x69, 0x72, 0x65, 0x57, 0x65, 0x61, 0x72, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x74, 0x69, 0x72, 0x65, 0x57, 0x65, 0x61,
	0x72, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74,
	0x69, 0x72, 0x65, 0x57, 0x65, 0x61, 0x72, 0x52, 0x65, 0x61, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x74, 0x69, 0x72, 0x65, 0x57, 0x65, 0x61, 0x72, 0x52,
	0x65, 0x61, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x69, 0x72, 0x65, 0x57,
	0x65, 0x61, 0x72, 0x52, 0x65, 0x61, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x11, 0x74, 0x69, 0x72, 0x65, 0x57, 0x65, 0x61, 0x72, 0x52, 0x65, 0x61, 0x72,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x11, 0x74, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x4c,
	0x65, 0x66, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x12, 0x74, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52,
	0x65, 0x61, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x74,
	0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x74, 0x69, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x72, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x74, 0x69, 0x72, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x50, 0x4d, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x10, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x50, 0x4d, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x05, 0x73, 0x74, 0x65, 0x65, 0x72, 0x42, 0x09, 0x5a, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_points_proto_rawDescOnce sync.Once
	file_points_proto_rawDescData = file_points_proto_rawDesc
)

func file_points_proto_rawDescGZIP() []byte {
	file_points_proto_rawDescOnce.Do(func() {
		file_points_proto_rawDescData = protoimpl.X.CompressGZIP(file_points_proto_rawDescData)
	})
	return file_points_proto_rawDescData
}

var file_points_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_points_proto_goTypes = []interface{}{
	(*ApiPoint)(nil), // 0: forzatelemetry.ApiPoint
}
var file_points_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_points_proto_init() }
func file_points_proto_init() {
	if File_points_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_points_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_points_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_points_proto_goTypes,
		DependencyIndexes: file_points_proto_depIdxs,
		MessageInfos:      file_points_proto_msgTypes,
	}.Build()
	File_points_proto = out.File
	file_points_proto_rawDesc = nil
	file_points_proto_goTypes = nil
	file_points_proto_depIdxs = nil
}
